// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcMovie.Data;

namespace MvcMovie.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20211202165352_5")]
    partial class _5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MvcMovie.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeID")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("MvcMovie.Models.LoaiSanPham", b =>
                {
                    b.Property<string>("LoaiSanPhamID")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoaiSanPhamName")
                        .HasColumnType("TEXT");

                    b.HasKey("LoaiSanPhamID");

                    b.ToTable("LoaiSanPhams");
                });

            modelBuilder.Entity("MvcMovie.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Genre")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Rating")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MvcMovie.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullName")
                        .HasColumnType("TEXT");

                    b.HasKey("PersonID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("MvcMovie.Models.Product", b =>
                {
                    b.Property<string>("ProductID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UnitPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MvcMovie.Models.SanPham", b =>
                {
                    b.Property<int>("SanPhamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoaiSanPhamID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SanPhamName")
                        .HasColumnType("TEXT");

                    b.HasKey("SanPhamID");

                    b.HasIndex("LoaiSanPhamID");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("MvcMovie.Models.Student", b =>
                {
                    b.Property<string>("StudenID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentName")
                        .HasColumnType("TEXT");

                    b.HasKey("StudenID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MvcMovie.Models.YoYo", b =>
                {
                    b.HasBaseType("MvcMovie.Models.Person");

                    b.Property<int>("IDYoYo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UniversityYoYo")
                        .HasColumnType("TEXT");

                    b.ToTable("YaYa");
                });

            modelBuilder.Entity("MvcMovie.Models.SanPham", b =>
                {
                    b.HasOne("MvcMovie.Models.LoaiSanPham", "LoaiSanPham")
                        .WithMany("SanPhams")
                        .HasForeignKey("LoaiSanPhamID");

                    b.Navigation("LoaiSanPham");
                });

            modelBuilder.Entity("MvcMovie.Models.YoYo", b =>
                {
                    b.HasOne("MvcMovie.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("MvcMovie.Models.YoYo", "PersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MvcMovie.Models.LoaiSanPham", b =>
                {
                    b.Navigation("SanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
